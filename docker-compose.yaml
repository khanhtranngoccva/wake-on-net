version: "2.23.3"
services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    working_dir: "/var/application"
    stdin_open: true
    ports:
      - "4000:80"
    command: [ "npm", "run", "dev" ]
    networks:
      - primary-network
      - user-network
    develop:
      watch:
        - action: sync
          path: ./backend/
          target: /var/application
          ignore:
            - ./backend/node_modules
        - action: rebuild
          path: ./backend/package.json
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    working_dir: "/var/application"
    ports:
      - "3000:80"
    stdin_open: true
    command: [ "npm", "run", "dev" ]
    networks:
      - primary-network
    develop:
      watch:
        - action: sync
          path: ./frontend/
          target: /var/application
          ignore:
            - ./frontend/node_modules
        - action: sync
          path: ./frontend/.env.local
          target: /var/application
        - action: rebuild
          path: ./frontend/package.json
  postgresql:
    image: postgres:latest
    ports:
      - "8888:5432"
    restart: "on-failure"
    stdin_open: true
    networks:
      - primary-network
    environment:
      POSTGRES_USER: wake-on-net
      POSTGRES_PASSWORD: wake-on-net
      POSTGRES_DATABASE: wake-on-net
  node-backend:
    build:
      context: node-backend
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    restart: "on-failure"
    stdin_open: true
    networks:
      - user-network
    command: [ "npm", "run", "dev" ]
    volumes:
      - "./data/node-backend:/var/data"
    develop:
      watch:
        - action: sync
          path: ./node-backend/
          target: /var/application
          ignore:
            - ./node-backend/node_modules
            - ./node-backend/data
        - action: rebuild
          path: ./node-backend/package.json
networks:
  primary-network:
    driver: bridge
  user-network:
    driver: bridge
